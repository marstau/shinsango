Import('use')

testEnv = use.Clone()
# testEnv.VariantDir('test', '../../', duplicate = False)
testEnv.VariantDir('test', '../../')
testEnv.VariantDir('common', '../common')

use = testEnv

# SConscript('../../mugen/SConscript', exports = ['use'], variant_dir = 'mugen')
# SConscript('../../paintown-engine/SConscript', exports = ['use'], variant_dir = 'paintown')
# use.Append(LIBS = ['mugen', 'paintown-engine'])

source = Split("""
test.cpp
common/init.cpp
test/globals.cpp
test/mugen/ast/ast.cpp
test/openbor/pack-reader.cpp
test/openbor/util.cpp
test/openbor/mod.cpp
test/platformer/game/world.cpp
test/platformer/game/animation.cpp
test/platformer/game/background.cpp
test/platformer/game/camera.cpp
test/platformer/game/game.cpp
test/platformer/game/tile.cpp
test/platformer/script/script.cpp
test/factory/font_render.cpp
test/asteroids/game.cpp
test/factory/collector.cpp
""")

source.append(use.Peg('test/openbor/data.peg'))

x = []
menu_test = testEnv.Program('menu', source)
x.extend(menu_test)
use.AddPostAction(menu_test, use['PAINTOWN_TEST'])
# x.append(testEnv.Program('load-stage', stage_source))
Return('x')
